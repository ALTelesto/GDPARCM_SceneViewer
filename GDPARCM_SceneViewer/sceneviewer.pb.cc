// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: sceneviewer.proto
// Protobuf C++ Version: 5.29.3

#include "sceneviewer.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sceneviewer {

inline constexpr Vector3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vector3::Vector3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Vector3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Vector3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Vector3DefaultTypeInternal() {}
  union {
    Vector3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Vector3DefaultTypeInternal _Vector3_default_instance_;

inline constexpr SceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scene_id_{static_cast< ::sceneviewer::SceneID >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SceneRequest::SceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneRequestDefaultTypeInternal() {}
  union {
    SceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneRequestDefaultTypeInternal _SceneRequest_default_instance_;

inline constexpr Mesh::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vertices_{},
        indices_{},
        _indices_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Mesh::Mesh(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshDefaultTypeInternal() {}
  union {
    Mesh _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshDefaultTypeInternal _Mesh_default_instance_;

inline constexpr LoadProgress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : update_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR LoadProgress::LoadProgress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoadProgressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadProgressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadProgressDefaultTypeInternal() {}
  union {
    LoadProgress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadProgressDefaultTypeInternal _LoadProgress_default_instance_;

inline constexpr Model::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mesh_{nullptr},
        position_{nullptr},
        rotation_{nullptr},
        scale_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Model::Model(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelDefaultTypeInternal() {}
  union {
    Model _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelDefaultTypeInternal _Model_default_instance_;

inline constexpr Scene::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : models_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Scene::Scene(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneDefaultTypeInternal() {}
  union {
    Scene _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneDefaultTypeInternal _Scene_default_instance_;
}  // namespace sceneviewer
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_sceneviewer_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_sceneviewer_2eproto = nullptr;
const ::uint32_t
    TableStruct_sceneviewer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::LoadProgress, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::LoadProgress, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::sceneviewer::LoadProgress, _impl_.update_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Vector3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Vector3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Vector3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Vector3, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Mesh, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Mesh, _impl_.vertices_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Mesh, _impl_.indices_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _impl_.mesh_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _impl_.rotation_),
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Model, _impl_.scale_),
        0,
        1,
        2,
        3,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::SceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sceneviewer::SceneRequest, _impl_.scene_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Scene, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sceneviewer::Scene, _impl_.models_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sceneviewer::LoadProgress)},
        {12, -1, -1, sizeof(::sceneviewer::Vector3)},
        {23, -1, -1, sizeof(::sceneviewer::Mesh)},
        {33, 45, -1, sizeof(::sceneviewer::Model)},
        {49, -1, -1, sizeof(::sceneviewer::SceneRequest)},
        {58, -1, -1, sizeof(::sceneviewer::Scene)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::sceneviewer::_LoadProgress_default_instance_._instance,
    &::sceneviewer::_Vector3_default_instance_._instance,
    &::sceneviewer::_Mesh_default_instance_._instance,
    &::sceneviewer::_Model_default_instance_._instance,
    &::sceneviewer::_SceneRequest_default_instance_._instance,
    &::sceneviewer::_Scene_default_instance_._instance,
};
const char descriptor_table_protodef_sceneviewer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021sceneviewer.proto\022\013sceneviewer\"V\n\014Load"
    "Progress\022\027\n\rload_accepted\030\001 \001(\010H\000\022\022\n\010pro"
    "gress\030\002 \001(\002H\000\022\017\n\005ready\030\003 \001(\010H\000B\010\n\006update"
    "\"*\n\007Vector3\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003"
    " \001(\002\")\n\004Mesh\022\020\n\010vertices\030\001 \003(\002\022\017\n\007indice"
    "s\030\002 \003(\r\"\235\001\n\005Model\022\037\n\004mesh\030\001 \001(\0132\021.scenev"
    "iewer.Mesh\022&\n\010position\030\002 \001(\0132\024.sceneview"
    "er.Vector3\022&\n\010rotation\030\003 \001(\0132\024.sceneview"
    "er.Vector3\022#\n\005scale\030\004 \001(\0132\024.sceneviewer."
    "Vector3\"6\n\014SceneRequest\022&\n\010scene_id\030\001 \001("
    "\0162\024.sceneviewer.SceneID\"+\n\005Scene\022\"\n\006mode"
    "ls\030\001 \003(\0132\022.sceneviewer.Model*J\n\007SceneID\022"
    "\013\n\007SCENE_0\020\000\022\013\n\007SCENE_1\020\001\022\013\n\007SCENE_2\020\002\022\013"
    "\n\007SCENE_3\020\003\022\013\n\007SCENE_4\020\0042\225\001\n\022SceneViewer"
    "Service\022D\n\nStreamLoad\022\031.sceneviewer.Scen"
    "eRequest\032\031.sceneviewer.LoadProgress0\001\0229\n"
    "\010GetScene\022\031.sceneviewer.SceneRequest\032\022.s"
    "ceneviewer.Sceneb\006proto3"
};
static ::absl::once_flag descriptor_table_sceneviewer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_sceneviewer_2eproto = {
    false,
    false,
    704,
    descriptor_table_protodef_sceneviewer_2eproto,
    "sceneviewer.proto",
    &descriptor_table_sceneviewer_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_sceneviewer_2eproto::offsets,
    file_level_enum_descriptors_sceneviewer_2eproto,
    file_level_service_descriptors_sceneviewer_2eproto,
};
namespace sceneviewer {
const ::google::protobuf::EnumDescriptor* SceneID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_sceneviewer_2eproto);
  return file_level_enum_descriptors_sceneviewer_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SceneID_internal_data_[] = {
    327680u, 0u, };
bool SceneID_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class LoadProgress::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::sceneviewer::LoadProgress, _impl_._oneof_case_);
};

LoadProgress::LoadProgress(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.LoadProgress)
}
inline PROTOBUF_NDEBUG_INLINE LoadProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sceneviewer::LoadProgress& from_msg)
      : update_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

LoadProgress::LoadProgress(
    ::google::protobuf::Arena* arena,
    const LoadProgress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoadProgress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (update_case()) {
    case UPDATE_NOT_SET:
      break;
      case kLoadAccepted:
        _impl_.update_.load_accepted_ = from._impl_.update_.load_accepted_;
        break;
      case kProgress:
        _impl_.update_.progress_ = from._impl_.update_.progress_;
        break;
      case kReady:
        _impl_.update_.ready_ = from._impl_.update_.ready_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:sceneviewer.LoadProgress)
}
inline PROTOBUF_NDEBUG_INLINE LoadProgress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : update_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void LoadProgress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoadProgress::~LoadProgress() {
  // @@protoc_insertion_point(destructor:sceneviewer.LoadProgress)
  SharedDtor(*this);
}
inline void LoadProgress::SharedDtor(MessageLite& self) {
  LoadProgress& this_ = static_cast<LoadProgress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_update()) {
    this_.clear_update();
  }
  this_._impl_.~Impl_();
}

void LoadProgress::clear_update() {
// @@protoc_insertion_point(one_of_clear_start:sceneviewer.LoadProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (update_case()) {
    case kLoadAccepted: {
      // No need to clear
      break;
    }
    case kProgress: {
      // No need to clear
      break;
    }
    case kReady: {
      // No need to clear
      break;
    }
    case UPDATE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = UPDATE_NOT_SET;
}


inline void* LoadProgress::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LoadProgress(arena);
}
constexpr auto LoadProgress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LoadProgress),
                                            alignof(LoadProgress));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LoadProgress::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LoadProgress_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LoadProgress::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LoadProgress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LoadProgress::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LoadProgress>(), &LoadProgress::ByteSizeLong,
            &LoadProgress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LoadProgress, _impl_._cached_size_),
        false,
    },
    &LoadProgress::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LoadProgress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 2> LoadProgress::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::LoadProgress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool load_accepted = 1;
    {PROTOBUF_FIELD_OFFSET(LoadProgress, _impl_.update_.load_accepted_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // float progress = 2;
    {PROTOBUF_FIELD_OFFSET(LoadProgress, _impl_.update_.progress_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // bool ready = 3;
    {PROTOBUF_FIELD_OFFSET(LoadProgress, _impl_.update_.ready_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LoadProgress::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.LoadProgress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_update();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LoadProgress::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LoadProgress& this_ = static_cast<const LoadProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LoadProgress::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LoadProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.LoadProgress)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.update_case()) {
            case kLoadAccepted: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  1, this_._internal_load_accepted(), target);
              break;
            }
            case kProgress: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  2, this_._internal_progress(), target);
              break;
            }
            case kReady: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteBoolToArray(
                  3, this_._internal_ready(), target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.LoadProgress)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LoadProgress::ByteSizeLong(const MessageLite& base) {
          const LoadProgress& this_ = static_cast<const LoadProgress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LoadProgress::ByteSizeLong() const {
          const LoadProgress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.LoadProgress)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.update_case()) {
            // bool load_accepted = 1;
            case kLoadAccepted: {
              total_size += 2;
              break;
            }
            // float progress = 2;
            case kProgress: {
              total_size += 5;
              break;
            }
            // bool ready = 3;
            case kReady: {
              total_size += 2;
              break;
            }
            case UPDATE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LoadProgress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoadProgress*>(&to_msg);
  auto& from = static_cast<const LoadProgress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.LoadProgress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_update();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLoadAccepted: {
        _this->_impl_.update_.load_accepted_ = from._impl_.update_.load_accepted_;
        break;
      }
      case kProgress: {
        _this->_impl_.update_.progress_ = from._impl_.update_.progress_;
        break;
      }
      case kReady: {
        _this->_impl_.update_.ready_ = from._impl_.update_.ready_;
        break;
      }
      case UPDATE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoadProgress::CopyFrom(const LoadProgress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.LoadProgress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoadProgress::InternalSwap(LoadProgress* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.update_, other->_impl_.update_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata LoadProgress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vector3::_Internal {
 public:
};

Vector3::Vector3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.Vector3)
}
Vector3::Vector3(
    ::google::protobuf::Arena* arena, const Vector3& from)
    : Vector3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Vector3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Vector3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:sceneviewer.Vector3)
  SharedDtor(*this);
}
inline void Vector3::SharedDtor(MessageLite& self) {
  Vector3& this_ = static_cast<Vector3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Vector3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vector3(arena);
}
constexpr auto Vector3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Vector3),
                                            alignof(Vector3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vector3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vector3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vector3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vector3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vector3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vector3>(), &Vector3::ByteSizeLong,
            &Vector3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vector3, _impl_._cached_size_),
        false,
    },
    &Vector3::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vector3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Vector3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::Vector3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.Vector3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vector3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vector3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.Vector3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.Vector3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vector3::ByteSizeLong(const MessageLite& base) {
          const Vector3& this_ = static_cast<const Vector3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vector3::ByteSizeLong() const {
          const Vector3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.Vector3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vector3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vector3*>(&to_msg);
  auto& from = static_cast<const Vector3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.Vector3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vector3::InternalSwap(Vector3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector3, _impl_.z_)
      + sizeof(Vector3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Vector3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Mesh::_Internal {
 public:
};

Mesh::Mesh(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.Mesh)
}
inline PROTOBUF_NDEBUG_INLINE Mesh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sceneviewer::Mesh& from_msg)
      : vertices_{visibility, arena, from.vertices_},
        indices_{visibility, arena, from.indices_},
        _indices_cached_byte_size_{0},
        _cached_size_{0} {}

Mesh::Mesh(
    ::google::protobuf::Arena* arena,
    const Mesh& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Mesh* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sceneviewer.Mesh)
}
inline PROTOBUF_NDEBUG_INLINE Mesh::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vertices_{visibility, arena},
        indices_{visibility, arena},
        _indices_cached_byte_size_{0},
        _cached_size_{0} {}

inline void Mesh::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Mesh::~Mesh() {
  // @@protoc_insertion_point(destructor:sceneviewer.Mesh)
  SharedDtor(*this);
}
inline void Mesh::SharedDtor(MessageLite& self) {
  Mesh& this_ = static_cast<Mesh&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Mesh::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Mesh(arena);
}
constexpr auto Mesh::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Mesh, _impl_.vertices_) +
          decltype(Mesh::_impl_.vertices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Mesh, _impl_.indices_) +
          decltype(Mesh::_impl_.indices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Mesh), alignof(Mesh), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Mesh::PlacementNew_,
                                 sizeof(Mesh),
                                 alignof(Mesh));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Mesh::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Mesh_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Mesh::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Mesh>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Mesh::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Mesh>(), &Mesh::ByteSizeLong,
            &Mesh::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Mesh, _impl_._cached_size_),
        false,
    },
    &Mesh::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Mesh::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Mesh::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::Mesh>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 indices = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Mesh, _impl_.indices_)}},
    // repeated float vertices = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Mesh, _impl_.vertices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float vertices = 1;
    {PROTOBUF_FIELD_OFFSET(Mesh, _impl_.vertices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated uint32 indices = 2;
    {PROTOBUF_FIELD_OFFSET(Mesh, _impl_.indices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Mesh::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.Mesh)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vertices_.Clear();
  _impl_.indices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Mesh::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Mesh& this_ = static_cast<const Mesh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Mesh::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Mesh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.Mesh)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated float vertices = 1;
          if (this_._internal_vertices_size() > 0) {
            target = stream->WriteFixedPacked(1, this_._internal_vertices(), target);
          }

          // repeated uint32 indices = 2;
          {
            int byte_size = this_._impl_._indices_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  2, this_._internal_indices(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.Mesh)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Mesh::ByteSizeLong(const MessageLite& base) {
          const Mesh& this_ = static_cast<const Mesh&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Mesh::ByteSizeLong() const {
          const Mesh& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.Mesh)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated float vertices = 1;
            {
              std::size_t data_size = std::size_t{4} *
                  ::_pbi::FromIntSize(this_._internal_vertices_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
            // repeated uint32 indices = 2;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_indices(), 1,
                      this_._impl_._indices_cached_byte_size_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Mesh::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Mesh*>(&to_msg);
  auto& from = static_cast<const Mesh&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.Mesh)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_vertices()->MergeFrom(from._internal_vertices());
  _this->_internal_mutable_indices()->MergeFrom(from._internal_indices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Mesh::CopyFrom(const Mesh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.Mesh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Mesh::InternalSwap(Mesh* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.vertices_.InternalSwap(&other->_impl_.vertices_);
  _impl_.indices_.InternalSwap(&other->_impl_.indices_);
}

::google::protobuf::Metadata Mesh::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Model::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Model>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_);
};

Model::Model(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.Model)
}
inline PROTOBUF_NDEBUG_INLINE Model::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sceneviewer::Model& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Model::Model(
    ::google::protobuf::Arena* arena,
    const Model& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Model* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mesh_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::sceneviewer::Mesh>(
                              arena, *from._impl_.mesh_)
                        : nullptr;
  _impl_.position_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.rotation_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(
                              arena, *from._impl_.rotation_)
                        : nullptr;
  _impl_.scale_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(
                              arena, *from._impl_.scale_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:sceneviewer.Model)
}
inline PROTOBUF_NDEBUG_INLINE Model::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Model::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mesh_),
           0,
           offsetof(Impl_, scale_) -
               offsetof(Impl_, mesh_) +
               sizeof(Impl_::scale_));
}
Model::~Model() {
  // @@protoc_insertion_point(destructor:sceneviewer.Model)
  SharedDtor(*this);
}
inline void Model::SharedDtor(MessageLite& self) {
  Model& this_ = static_cast<Model&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.mesh_;
  delete this_._impl_.position_;
  delete this_._impl_.rotation_;
  delete this_._impl_.scale_;
  this_._impl_.~Impl_();
}

inline void* Model::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Model(arena);
}
constexpr auto Model::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Model),
                                            alignof(Model));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Model::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Model_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Model::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Model>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Model::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Model>(), &Model::ByteSizeLong,
            &Model::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Model, _impl_._cached_size_),
        false,
    },
    &Model::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Model::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> Model::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Model, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::Model>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sceneviewer.Vector3 scale = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Model, _impl_.scale_)}},
    // .sceneviewer.Mesh mesh = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Model, _impl_.mesh_)}},
    // .sceneviewer.Vector3 position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Model, _impl_.position_)}},
    // .sceneviewer.Vector3 rotation = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Model, _impl_.rotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sceneviewer.Mesh mesh = 1;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.mesh_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sceneviewer.Vector3 position = 2;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sceneviewer.Vector3 rotation = 3;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.rotation_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sceneviewer.Vector3 scale = 4;
    {PROTOBUF_FIELD_OFFSET(Model, _impl_.scale_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sceneviewer::Mesh>()},
    {::_pbi::TcParser::GetTable<::sceneviewer::Vector3>()},
    {::_pbi::TcParser::GetTable<::sceneviewer::Vector3>()},
    {::_pbi::TcParser::GetTable<::sceneviewer::Vector3>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Model::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.Model)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.mesh_ != nullptr);
      _impl_.mesh_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.scale_ != nullptr);
      _impl_.scale_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Model::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Model& this_ = static_cast<const Model&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Model::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Model& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.Model)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .sceneviewer.Mesh mesh = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.mesh_, this_._impl_.mesh_->GetCachedSize(), target,
                stream);
          }

          // .sceneviewer.Vector3 position = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.position_, this_._impl_.position_->GetCachedSize(), target,
                stream);
          }

          // .sceneviewer.Vector3 rotation = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.rotation_, this_._impl_.rotation_->GetCachedSize(), target,
                stream);
          }

          // .sceneviewer.Vector3 scale = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.scale_, this_._impl_.scale_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.Model)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Model::ByteSizeLong(const MessageLite& base) {
          const Model& this_ = static_cast<const Model&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Model::ByteSizeLong() const {
          const Model& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.Model)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .sceneviewer.Mesh mesh = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mesh_);
            }
            // .sceneviewer.Vector3 position = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.position_);
            }
            // .sceneviewer.Vector3 rotation = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rotation_);
            }
            // .sceneviewer.Vector3 scale = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.scale_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Model::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Model*>(&to_msg);
  auto& from = static_cast<const Model&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.Model)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.mesh_ != nullptr);
      if (_this->_impl_.mesh_ == nullptr) {
        _this->_impl_.mesh_ =
            ::google::protobuf::Message::CopyConstruct<::sceneviewer::Mesh>(arena, *from._impl_.mesh_);
      } else {
        _this->_impl_.mesh_->MergeFrom(*from._impl_.mesh_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.rotation_ != nullptr);
      if (_this->_impl_.rotation_ == nullptr) {
        _this->_impl_.rotation_ =
            ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(arena, *from._impl_.rotation_);
      } else {
        _this->_impl_.rotation_->MergeFrom(*from._impl_.rotation_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.scale_ != nullptr);
      if (_this->_impl_.scale_ == nullptr) {
        _this->_impl_.scale_ =
            ::google::protobuf::Message::CopyConstruct<::sceneviewer::Vector3>(arena, *from._impl_.scale_);
      } else {
        _this->_impl_.scale_->MergeFrom(*from._impl_.scale_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Model::CopyFrom(const Model& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.Model)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Model::InternalSwap(Model* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Model, _impl_.scale_)
      + sizeof(Model::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(Model, _impl_.mesh_)>(
          reinterpret_cast<char*>(&_impl_.mesh_),
          reinterpret_cast<char*>(&other->_impl_.mesh_));
}

::google::protobuf::Metadata Model::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SceneRequest::_Internal {
 public:
};

SceneRequest::SceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.SceneRequest)
}
SceneRequest::SceneRequest(
    ::google::protobuf::Arena* arena, const SceneRequest& from)
    : SceneRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.scene_id_ = {};
}
SceneRequest::~SceneRequest() {
  // @@protoc_insertion_point(destructor:sceneviewer.SceneRequest)
  SharedDtor(*this);
}
inline void SceneRequest::SharedDtor(MessageLite& self) {
  SceneRequest& this_ = static_cast<SceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SceneRequest(arena);
}
constexpr auto SceneRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SceneRequest),
                                            alignof(SceneRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SceneRequest>(), &SceneRequest::ByteSizeLong,
            &SceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_._cached_size_),
        false,
    },
    &SceneRequest::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::SceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sceneviewer.SceneID scene_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SceneRequest, _impl_.scene_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_.scene_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sceneviewer.SceneID scene_id = 1;
    {PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_.scene_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.SceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scene_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SceneRequest& this_ = static_cast<const SceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.SceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .sceneviewer.SceneID scene_id = 1;
          if (this_._internal_scene_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_scene_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.SceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SceneRequest::ByteSizeLong(const MessageLite& base) {
          const SceneRequest& this_ = static_cast<const SceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SceneRequest::ByteSizeLong() const {
          const SceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.SceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .sceneviewer.SceneID scene_id = 1;
            if (this_._internal_scene_id() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_scene_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SceneRequest*>(&to_msg);
  auto& from = static_cast<const SceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.SceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene_id() != 0) {
    _this->_impl_.scene_id_ = from._impl_.scene_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SceneRequest::CopyFrom(const SceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.SceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SceneRequest::InternalSwap(SceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.scene_id_, other->_impl_.scene_id_);
}

::google::protobuf::Metadata SceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Scene::_Internal {
 public:
};

Scene::Scene(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sceneviewer.Scene)
}
inline PROTOBUF_NDEBUG_INLINE Scene::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sceneviewer::Scene& from_msg)
      : models_{visibility, arena, from.models_},
        _cached_size_{0} {}

Scene::Scene(
    ::google::protobuf::Arena* arena,
    const Scene& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Scene* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sceneviewer.Scene)
}
inline PROTOBUF_NDEBUG_INLINE Scene::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : models_{visibility, arena},
        _cached_size_{0} {}

inline void Scene::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Scene::~Scene() {
  // @@protoc_insertion_point(destructor:sceneviewer.Scene)
  SharedDtor(*this);
}
inline void Scene::SharedDtor(MessageLite& self) {
  Scene& this_ = static_cast<Scene&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Scene::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Scene(arena);
}
constexpr auto Scene::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_) +
          decltype(Scene::_impl_.models_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Scene), alignof(Scene), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Scene::PlacementNew_,
                                 sizeof(Scene),
                                 alignof(Scene));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Scene::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Scene_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Scene::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Scene>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Scene::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Scene>(), &Scene::ByteSizeLong,
            &Scene::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Scene, _impl_._cached_size_),
        false,
    },
    &Scene::kDescriptorMethods,
    &descriptor_table_sceneviewer_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Scene::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Scene::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sceneviewer::Scene>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sceneviewer.Model models = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sceneviewer.Model models = 1;
    {PROTOBUF_FIELD_OFFSET(Scene, _impl_.models_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sceneviewer::Model>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Scene::Clear() {
// @@protoc_insertion_point(message_clear_start:sceneviewer.Scene)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.models_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Scene::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Scene& this_ = static_cast<const Scene&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Scene::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Scene& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:sceneviewer.Scene)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .sceneviewer.Model models = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_models_size());
               i < n; i++) {
            const auto& repfield = this_._internal_models().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:sceneviewer.Scene)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Scene::ByteSizeLong(const MessageLite& base) {
          const Scene& this_ = static_cast<const Scene&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Scene::ByteSizeLong() const {
          const Scene& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:sceneviewer.Scene)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .sceneviewer.Model models = 1;
            {
              total_size += 1UL * this_._internal_models_size();
              for (const auto& msg : this_._internal_models()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Scene::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Scene*>(&to_msg);
  auto& from = static_cast<const Scene&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sceneviewer.Scene)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_models()->MergeFrom(
      from._internal_models());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Scene::CopyFrom(const Scene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sceneviewer.Scene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Scene::InternalSwap(Scene* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.models_.InternalSwap(&other->_impl_.models_);
}

::google::protobuf::Metadata Scene::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sceneviewer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_sceneviewer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
